#!/bin/bash

set -euo pipefail

# load default settings

. ./settings.ini.sample

# Override default settings with docker env
db_host=${POSTGRES_HOST:-db}
db_port=${POSTGRES_PORT:-5432}
db_name=${POSTGRES_DB:-geonature2db}
user_pg=${POSTGRES_USER:-geonatuser}
user_pg_password=${POSTGRES_PASSWORD:-monpassachanger}
echo "user_pg_password $POSTGRES_PASSWORD $user_pg_password"

app_name=${APP_NAME:-$app_name}
usershub_release=${UH_RELEASE:-$usershub_release}
users_schema=${UH_SCHEMA:-local}

### UsersHub relation settings - Required if users_schema=foreign
usershub_host=${UH_HOST:-$usershub_host}
usershub_db=${UH_DB:-$usershub_db}
usershub_port=${UH_PORT:-$usershub_port}
usershub_user=${UH_USER:-$usershub_user}
usershub_pass=${UH_PASSWORD:-$usershub_pass}


# Insert GeoNature-atlas data (theme & attributs)
insert_geonatureatlas_data=${INSERT_ATLAS_DATA:-$insert_geonatureatlas_data}
# Insert an example of attribute (Migrateur)
insert_attribut_example=${INSERT_ATTRIB_SAMPLE:-$insert_attribut_example}
# Insert 8 examples of taxons and add it to the Occtax list
insert_taxons_example=${INSERT_TAXA_SAMPLE:-$insert_taxons_example}

until pg_isready -h $db_host -p $db_port
do
  echo "Awaiting Database container"
  sleep 1
done
sleep 2

. create_sys_dir.sh

. install_db.sh

#crÃ©ation d'un fichier de configuration
if [ ! -f static/app/constants.js ]; then
  echo 'Fichier de configuration non existant'
  cp static/app/constants.js.sample static/app/constants.js
fi

chmod -R 775 static/medias

if [ ! -f ./config.py ]; then
    echo "generate config file"
    echo "# Config generated by docker-entrypoint.sh" >> ./config.py
    echo "SQLALCHEMY_DATABASE_URI = \"postgresql://$user_pg:$user_pg_password@$db_host:$db_port/$db_name\"" >> ./config.py
    echo "SQLALCHEMY_TRACK_MODIFICATIONS = False" >> ./config.py
    echo "" >> ./config.py
    echo "# ID of TaxHub application" >> ./config.py
    echo "ID_APP = ${ID_APP:-2}" >> ./config.py
    echo "" >> ./config.py
    echo "COOKIE_EXPIRATION = ${COOKIE_EXPIRATION:-3600}" >> ./config.py
    echo "SESSION_TYPE = 'filesystem'" >> ./config.py
    echo "SECRET_KEY = '${SECRETKEY:-$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c50)}'" >> ./config.py
    echo "COOKIE_EXPIRATION = 3600" >> ./config.py
    echo "" >> ./config.py
    echo "# File" >> ./config.py
    echo "import os" >> ./config.py
    echo "BASE_DIR = os.path.abspath(os.path.dirname(__file__))" >> ./config.py
    echo "UPLOAD_FOLDER = 'static/medias'" >> ./config.py
    echo "# Authentification crypting method (hash or md5)" >> ./config.py
    echo "PASS_METHOD='hash'" >> ./config.py
    echo "" >> ./config.py
    echo "DEBUG = ${DEBUG:-False}" >> ./config.py
else
    echo "config file already exists"
fi

# Start App
echo ""
echo "READY TO START USERSHUB APPLICATION ON PORT ${PORT:-5001}"
echo ""
gunicorn -w ${WORKERS:-1} --access-logfile - -b 0.0.0.0:${PORT:-5000} server:app
